안녕하세요, 20171666 고재원입니다. 

calc.y은 Bison을 기반으로 만들었습니다. 

1. '_' 의 기능을 구현하였습니다. 
2. ^, %, / 을 구현하였습니다. 이때 모든 값이 double이므로,
  / 연산자는 평소에 접하던 몫을 반환하는 것이 아닌, 나눈 그대로를
 반환합니다. ( 4 /3 =1 >> 4.0 / 3.0 = 1.333333 )

 이것이 마음에 들지 않아 # 연산자 하나를 추가하였습니다. 기능은 int형에 대한 / 연산과 
 동일하게 몫을 반환합니다. ( 4.0 # 3.0 = 1.0 )

2-2. \n 을 허용 하였습니다. 

3. '$'을 입력하면 계산기가 종료됩니다. 

4. calc.y만을 필요로 하는 것 같아 flex를 이용하여 lexical analyzer를 만들지 않고,
 calc.y 안에 lex()를 구현하였습니다.  

5. double형 result라는 변수를 새로 만들어 계산의 결과를 저장하고, 불러오는 용도로 사용하였습니다. 

6. 명령 프롬프트에서 bison calc.y ,    gcc -o cal calc.tab.c 의 순서로 입력하여
    parser 를 완성하였습니다. 

7. 2^3^2 = 512 즉 ^연산은 오른쪽 부터 실행되도록 만들었습니다. 

후기 ) 
교수님 말씀대로 100줄도 안되는 코드에 수십가지 오류가 생겨 오류와의 전쟁을 하였습니다. 
특히 어디가 틀렸는지 말해주지 않던 syntax error는 잊을 수 없을 것 같습니다. 

감사합니다.

 